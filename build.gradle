
import java.text.SimpleDateFormat;
import java.util.Date;

def getDateTime() {
		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd-HHmm");
		return format.format(new Date());
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath('com.google.code.gson:gson:2.3.1') 
    }
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

ext {
	springVersion = '4.2.5.RELEASE'
	release_version= '0.1.0-' + getDateTime()
}
	

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'smart-maintenance'
    version =  release_version
}
bootRepackage {
	mainClass = 'com.i8m.Application'
    executable = true
}



repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	compile ("org.slf4j:slf4j-api:1.7.5")
	compile ("com.thoughtworks.xstream:xstream:1.4.9")
	compile ("org.apache.httpcomponents:httpclient:4.4.1")
	compile ("org.apache.httpcomponents:httpmime:4.4.1")
	compile ("com.google.code.gson:gson:2.3.1")
	compile ("javax.jms:javax.jms-api:2.0")
	compile ("org.springframework.boot:spring-boot-starter-web")
	compile ("org.springframework.boot:spring-boot-starter-actuator")
	compile ("org.springframework.boot:spring-boot-starter-data-mongodb")
	compile ("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile ("org.springframework:spring-aop:$springVersion")
	compile ("org.springframework:spring-aspects:$springVersion")
	compile ("org.aspectj:aspectjrt:1.8.9")
	
	testCompile  "org.springframework.boot:spring-boot-starter-test" 
	
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
